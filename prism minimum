#include <stdio.h>

#define INF 9999  // Representing infinity
#define V 5       // Number of vertices

void primMST(int graph[V][V]) {
    int selected[V]; // To track selected vertices
    int no_edge = 0; // Count edges in MST
    int x, y;        // Indices for edges

    // Initialize all vertices as not selected
    for (int i = 0; i < V; i++)
        selected[i] = 0;

    // Start with the first vertex
    selected[0] = 1;
    printf("Edge : Weight\n");

    while (no_edge < V - 1) {
        int min = INF;
        x = 0;
        y = 0;

        for (int i = 0; i < V; i++) {
            if (selected[i]) {
                for (int j = 0; j < V; j++) {
                    if (!selected[j] && graph[i][j]) {
                        if (min > graph[i][j]) {
                            min = graph[i][j];
                            x = i;
                            y = j;
                        }
                    }
                }
            }
        }
        printf("%d - %d : %d\n", x, y, graph[x][y]);
        selected[y] = 1;
        no_edge++;
    }
}

int main() {
    // Graph represented as an adjacency matrix
    int graph[V][V] = {
        {0, 2, 0, 6, 0},
        {2, 0, 3, 8, 5},
        {0, 3, 0, 0, 7},
        {6, 8, 0, 0, 9},
        {0, 5, 7, 9, 0}
    };

    primMST(graph);

    return 0;
}
